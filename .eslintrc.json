{
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "babel-eslint",
    "ecmaVersion": 2020,
    "sourceType": "module",
    "babelOptions": {
      "configFile": ".babelrc"
    }
  },
  "plugins": ["prettier"],
  "extends": ["plugin:vue/essential", "eslint:recommended", "@vue/prettier"],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js"]
      }
    }
  },
  "rules": {
    "no-plusplus": 0,
    "no-param-reassign": ["warn", { "props": false }],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-use-before-define": 0,
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "func-names": 0,
    "no-console": ["error", { "allow": ["warn", "error", "log"] }],
    "max-classes-per-file": 0,
    "vue/custom-event-name-casing": "warn",
    "vue/no-mutating-props": "warn",
    "curly": [2, "multi-line"],
    "quotes": ["error", "double"],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ]
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "globals": {
    "Logger": true
  }
}
